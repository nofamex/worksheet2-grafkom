/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useEffect, useState } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";

export default function Model({ ...props }) {
  const group = useRef();
  const { nodes, materials, animations } = useGLTF("/ender.glb");
  const { actions } = useAnimations(animations, group);

  const [position, setPosition] = useState({
    x: -3,
    y: 2.2,
    z: -2,
    r: 3,
  });

  useEffect(() => {
    if (!props.play) actions.Swinging.stop();
    else actions.Swinging.play();
  }, [props.play]);

  useEffect(() => {
    const setPoint = (event) => {
      if (props.selected !== "enderman") {
        setPosition(position);
        return;
      }
      switch (event.keyCode) {
        case 101:
          setPosition({
            x: position.x,
            y: position.y,
            z: position.z,
            r: position.r + 1,
          });
          return;
        case 113:
          setPosition({
            x: position.x,
            y: position.y,
            z: position.z,
            r: position.r - 1,
          });
          return;
        case 119:
          setPosition({
            x: position.x,
            y: position.y + 1,
            z: position.z,
            r: position.r,
          });
          return;
        case 115:
          setPosition({
            x: position.x,
            y: position.y - 1,
            z: position.z,
            r: position.r,
          });
          return;
        case 100:
          setPosition({
            x: position.x + 1,
            y: position.y,
            z: position.z,
            r: position.r,
          });
          return;
        case 97:
          setPosition({
            x: position.x - 1,
            y: position.y,
            z: position.z,
            r: position.r,
          });
          return;
        case 122:
          setPosition({
            x: position.x,
            y: position.y,
            z: position.z + 1,
            r: position.r,
          });
          return;
        case 120:
          setPosition({
            x: position.x,
            y: position.y,
            z: position.z - 1,
            r: position.r,
          });
          return;
      }
    };

    window.addEventListener("keypress", setPoint);
  }, [props.selected, position]);

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group
          name="Armature"
          position={[position.x, position.y, position.z]}
          scale={0.44}
          rotation={[-Math.PI, position.r, -Math.PI]}
        >
          <group name="Bone001" position={[0.03, -0.02, -0.02]}>
            <group
              name="Bone002"
              position={[0, 2.28, 0]}
              rotation={[-0.02, 0.68, 0.02]}
            >
              <mesh
                name="Cube"
                geometry={nodes.Cube.geometry}
                material={materials.Material}
                position={[0, 0.1, 0.02]}
              >
                {props.wireframe && (
                  <meshBasicMaterial
                    attach="material"
                    color="hotpink"
                    wireframe
                  />
                )}
              </mesh>
            </group>
            <group
              name="Bone006"
              position={[0.44, -0.24, 0.01]}
              rotation={[1.57, -1.57, -1.57]}
            >
              <mesh
                name="Cube002"
                geometry={nodes.Cube002.geometry}
                material={materials.Material}
                position={[-0.02, 0.15, 0.17]}
                rotation={[Math.PI, -1.57, 0]}
                scale={[0.41, 1.77, 0.37]}
              >
                {props.wireframe && (
                  <meshBasicMaterial
                    attach="material"
                    color="hotpink"
                    wireframe
                  />
                )}
              </mesh>
            </group>
            <group
              name="Bone008"
              position={[-0.38, -0.25, 0.02]}
              rotation={[1.57, -1.57, -1.58]}
            >
              <mesh
                name="Cube008"
                geometry={nodes.Cube008.geometry}
                material={materials.Material}
                position={[-0.02, 0.15, -0.18]}
                rotation={[Math.PI, -1.57, 0]}
                scale={[0.44, 1.76, 0.4]}
              >
                {props.wireframe && (
                  <meshBasicMaterial
                    attach="material"
                    color="hotpink"
                    wireframe
                  />
                )}
              </mesh>
            </group>
            <group
              name="Bone_shoulde_left"
              position={[0, 2.28, 0]}
              rotation={[-1.89, -0.3, 1.48]}
            >
              <group
                name="Bone010"
                position={[0.01, 0.98, -0.02]}
                rotation={[-0.8, -0.22, -0.22]}
              >
                <mesh
                  name="Cube005"
                  geometry={nodes.Cube005.geometry}
                  material={materials.Material}
                  position={[-0.04, 0.34, -0.09]}
                  rotation={[Math.PI, -1.57, 0]}
                  scale={[0.41, 1.81, 0.36]}
                >
                  {props.wireframe && (
                    <meshBasicMaterial
                      attach="material"
                      color="hotpink"
                      wireframe
                    />
                  )}
                </mesh>
              </group>
            </group>
            <group
              name="_Bone_Shoulder_right"
              position={[0, 2.28, 0]}
              rotation={[-1.86, 0.27, -1.49]}
            >
              <group
                name="Bone003"
                position={[0, 1.03, -0.04]}
                rotation={[2.38, -0.21, 2.95]}
              >
                <mesh
                  name="Cube004"
                  geometry={nodes.Cube004.geometry}
                  material={materials.Material}
                  position={[-0.02, 0.35, 0.17]}
                  rotation={[Math.PI, -1.57, 0]}
                  scale={[0.42, 1.81, 0.35]}
                >
                  {props.wireframe && (
                    <meshBasicMaterial
                      attach="material"
                      color="hotpink"
                      wireframe
                    />
                  )}
                </mesh>
              </group>
            </group>
            <mesh
              name="Cube001"
              geometry={nodes.Cube001.geometry}
              material={materials.Material}
              position={[0, 1.14, 0.02]}
            >
              {props.wireframe && (
                <meshBasicMaterial
                  attach="material"
                  color="hotpink"
                  wireframe
                />
              )}
            </mesh>
          </group>
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("/ender.glb");
